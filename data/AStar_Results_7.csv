x,y,G_Cost,H_Cost,P_Cost,fCost,GridX,GridY,,
-35,19.75,10,650,0,660,72,33,,
-35,20,20,640,0,660,72,34,,
-35,20.25,30,630,0,660,72,35,,
-35,20.5,40,620,0,660,72,36,,
-35,20.75,50,610,0,660,72,37,,
-35,21,60,600,0,660,72,38,,
-35,21.25,70,590,0,660,72,39,,
-35,21.5,80,580,0,660,72,40,,
-35,21.75,90,570,0,660,72,41,,
-35,22,100,560,0,660,72,42,,
-35,22.25,110,550,0,660,72,43,,
-35,22.5,120,540,0,660,72,44,,
-35,22.75,130,530,0,660,72,45,,
-35,23,140,520,0,660,72,46,,
-35,23.25,150,510,0,660,72,47,,
-35,23.5,160,500,0,660,72,48,,
-35,23.75,170,490,0,660,72,49,,
-35,24,180,480,0,660,72,50,, for (int i = 1; i < openSet.Count; i++)
-35,24.25,190,470,0,660,72,51,, {
-35,24.5,200,460,0,660,72,52,,     if (openSet[i].fCost <= node.fCost)
-35,24.75,210,450,0,660,72,53,,     {
-35,25,220,440,0,660,72,54,,         if (openSet[i].pCost < node.pCost)
-35,25.25,230,430,0,660,72,55,,             node = openSet[i];
-35,25.5,240,420,0,660,72,56,,     }
-35,25.75,250,410,0,660,72,57,, }
-35,26,260,400,0,660,72,58,,
-35,26.25,270,390,0,660,72,59,,
-35,26.5,280,380,0,660,72,60,,
-35.25,26.75,300,360,10000000,10000660,71,61,,
-35.5,27,320,340,10000000,10000660,70,62,,
-35.75,27.25,340,320,10000000,10000660,69,63,,
-36,27.5,360,300,10000000,10000660,68,64,,
-36.25,27.75,380,280,10000000,10000660,67,65,,
-36.5,28,400,260,10000000,10000660,66,66,,
-36.75,28.25,420,240,10000000,10000660,65,67,,
-37,28.5,440,220,10000000,10000660,64,68,,
-37.25,28.75,460,200,10000000,10000660,63,69,,
-37.5,29,480,180,10000000,10000660,62,70,,
-37.75,29.25,500,160,10000000,10000660,61,71,,
-38,29.5,520,140,10000000,10000660,60,72,,
-38.25,29.75,540,120,10000000,10000660,59,73,,
-38.5,30,560,100,10000000,10000660,58,74,,
-38.75,30.25,580,80,10000000,10000660,57,75,,
-39,30.5,600,60,10000000,10000660,56,76,,
-39.25,30.75,620,40,10000000,10000660,55,77,,
-39.5,31,640,20,10000000,10000660,54,78,,
-39.75,31.25,660,0,10000000,10000660,53,79,,
